{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,2DAAuC;AACvC,gFAAgD;AAMhD;IAAqC,2CAAe;IAClD,yBAAY,IAA6B;QAAzC,YACE,kBAAM,IAAI,CAAC,SAEZ;QADC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;IAC3B,CAAC;IAED,6BAAG,GAAH,UAAI,IAAS,EAAE,QAAoB;QAAnC,iBAaC;QAZC,YAAY,CAAC;YACX,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,YAAY,CAAC;YAClB,OAAO,EAAE,QAAQ;YACjB,UAAU,EAAE;gBACV,MAAM,EAAE,CAAE,IAAI,CAAE;aACjB;SACF,CAAC,CAAC;QAEH,QAAQ,EAAE,CAAC;IACb,CAAC;IACH,sBAAC;AAAD,CAAC,AApBD,CAAqC,2BAAe,GAoBnD;AApBY,0CAAe;AAoB3B,CAAC","sourcesContent":["import * as Sentry from '@sentry/node';\r\nimport TransportStream from 'winston-transport';\r\n\r\nexport interface ISentryTransportOptions extends TransportStream.TransportStreamOptions {\r\n  sentry: Sentry.NodeOptions;\r\n}\r\n\r\nexport class SentryTransport extends TransportStream {\r\n  constructor(opts: ISentryTransportOptions) {\r\n    super(opts);\r\n    Sentry.init(opts.sentry);\r\n  }\r\n\r\n  log(info: any, callback: () => void) {\r\n    setImmediate(() => {\r\n      this.emit('logged', info);\r\n    });\r\n\r\n    Sentry.captureEvent({\r\n      message: 'Manual',\r\n      stacktrace: {\r\n        frames: [ info ]\r\n      },\r\n    });\r\n\r\n    callback();\r\n  }\r\n};"]}